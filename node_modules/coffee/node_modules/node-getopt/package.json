{
  "name": "node-getopt",
  "version": "0.2.3",
  "author": {
    "name": "Jiang Miao",
    "email": "jiangfriend@gmail.com"
  },
  "description": "featured command line args parser",
  "keywords": [
    "getopt",
    "arg",
    "parser"
  ],
  "homepage": "http://github.com/jiangmiao/node-getopt",
  "repository": {
    "type": "git",
    "url": "git://github.com/jiangmiao/node-getopt.git"
  },
  "main": "./lib",
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "node-getopt\n===========\nFeatured command line parser.\n\nBasic Usage\n-----------\n\n**Parse Commandline**\n\ncode: oneline.js\n\n    // node-getopt oneline example.\n    opt = require('node-getopt').create([\n      ['s' , ''                    , 'short option.'],\n      [''  , 'long'                , 'long option.'],\n      ['S' , 'short-with-arg=ARG'  , 'option with argument'],\n      ['L' , 'long-with-arg=ARG'   , 'long option with argument'],\n      [''  , 'color[=COLOR]'       , 'COLOR is optional'],\n      ['m' , 'multi-with-arg=ARG+' , 'multiple option with argument'],\n      [''  , 'no-comment'],\n      ['h' , 'help'                , 'display this help'],\n      ['v' , 'version'             , 'show version']\n    ])              // create Getopt instance\n    .bindHelp()     // bind option 'help' to default action\n    .parseSystem(); // parse command line\n\n    console.info(opt);\n\n`$ node oneline.js  foo -s --long-with-arg bar -m a -m b -- --others`\n\n    { argv: [ 'foo', '--others' ],\n      options:\n       { s: true,\n         'long-with-arg': 'bar',\n         'multi-with-arg': [ 'a', 'b' ] } }\n\n`$ node oneline.js -h`\n\n    Usage: node oneline.js\n\n      -s                         short option.\n          --long                 long option.\n      -S, --short-with-arg=ARG   option with argument\n      -L, --long-with-arg=ARG    long option with argument\n          --color[=COLOR]        COLOR is optional\n      -m, --multi-with-arg=ARG+  multiple option with argument\n          --no-comment\n      -h, --help                 display this help\n      -v, --version              show version\n\ncode: simple.js\n\n    // examples/simple.js\n    // argv parse\n    Getopt = require('node-getopt');\n\n    // Getopt arguments options\n    //   '=':   has argument\n    //   '[=]': has argument but optional\n    //   '+':   multiple option supported\n    getopt = new Getopt([\n      ['s'],\n      ['S' , '='],\n      [''  , 'long-with-arg=ARG'],\n      ['m' , '=+'],\n      [''  , 'color[=COLOR]'],\n      ['h' , 'help']\n    ]).bindHelp();\n\n    // process.argv needs slice(2) for it starts with 'node' and 'script name'\n    // parseSystem is alias  of parse(process.argv.slice(2))\n    // opt = getopt.parseSystem();\n    opt = getopt.parse(process.argv.slice(2));\n    console.info(opt);\n\n`$ node simple.js foo -s --long-with-arg bar -m a -m b -- --others`\n\n    { argv: [ 'foo', '--others' ],\n      options: { s: true, 'long-with-arg': 'bar', m: [ 'a', 'b' ] } }\n\n**Work with help**\n\ncode: help.js\n\n    // examples/help.js\n    // Works with help\n    Getopt = require('node-getopt');\n\n    getopt = new Getopt([\n      ['s' , ''                    , 'short option.'],\n      [''  , 'long'                , 'long option.'],\n      ['S' , 'short-with-arg=ARG'  , 'option with argument'],\n      ['L' , 'long-with-arg=ARG'   , 'long option with argument'],\n      [''  , 'color[=COLOR]'       , 'COLOR is optional'],\n      ['m' , 'multi-with-arg=ARG+' , 'multiple option with argument'],\n      [''  , 'no-comment'],\n      ['h' , 'help'                , 'display this help']\n    ]);\n\n    // Use custom help template instead of default help\n    // [[OPTIONS]] is the placeholder for options list\n    getopt.setHelp(\n      \"Usage: node help.js [OPTION]\\n\" +\n      \"node-getopt help demo.\\n\" +\n      \"\\n\" +\n      \"[[OPTIONS]]\\n\" +\n      \"\\n\" +\n      \"Installation: npm install node-getopt\\n\" +\n      \"Respository:  https://github.com/jiangmiao/node-getopt\"\n    );\n\n    getopt.showHelp();\n\n`$ node examples/help.js`\n\n    Usage: node help.js [OPTION]\n    node-getopt help demo.\n\n      -s                         short option.\n          --long                 long option.\n      -S, --short-with-arg=ARG   option with argument\n      -L, --long-with-arg=ARG    long option with argument\n          --color[=COLOR]        COLOR is optional\n      -m, --multi-with-arg=ARG+  multiple option with argument\n          --no-comment\n      -h, --help                 display this help\n\n    Installation: npm install node-getopt\n    Respository:  https://github.com/jiangmiao/node-getopt\n\nFeatures\n--------\n\nshort option name\n\n    $ node simple.js -s\n    { argv: [], options: { short: true } }\n\n    $ node simple.js -S foo\n    { argv: [], options: { 'short-with-arg': 'foo' } }\n\nlong option name\n\n    $ node simple.js --long\n    { argv: [], options: { long: true } }\n\n    $ node simple.js --long-with-arg foo\n    { argv: [], options: { 'long-with-arg': 'foo' } }\n\nargument required\n\n    $ node simple.js --long-with-arg\n    ERROR: option long-with-arg need argument\n\n    $ node simple.js --long-with-arg foo\n    { argv: [], options: { 'long-with-arg': 'foo' } }\n\n    $ node simple.js --long-with-arg=foo\n    { argv: [], options: { 'long-with-arg': 'foo' } }\n\noptional argument\n\n    $ node simple.js --color\n    { argv: [], options: { color: '' } }\n\n    $ node simple.js --color=foo\n    { argv: [], options: { color: 'foo' } }\n\n    $ node simple.js --color foo\n    { argv: [ 'foo' ], options: { color: '' }\n\nchain option\n\n    $ node simple.js -slS foo\n    { argv: [],\n      options: { short: true, long: true, 'short-with-arg': 'foo' } }\n\n\nmulti option supported\n\n    $ node simple.js -m a -m b -m c\n    { argv: [], options: { 'multi-with-arg': [ 'a', 'b', 'c' ] } }\n\ntext argv supported\n\n    $ node simple.js foo -m a bar -m b baz -m c\n    { argv: [ 'foo', 'bar', 'baz' ],\n      options: { 'multi-with-arg': [ 'a', 'b', 'c' ] } }\n\nkeep text after --\n\n    $ node simple.js -s -- -s\n    { argv: [ '-s' ], options: { short: true } }\n\nReferences\n----------\n\n    require('node-getopt') returns class Getopt\n\nGetopt Methods:\n\n    constructor(Array options)\n        options is a set of option. each option contains 3 fields.\n        [short_name, long_name_with_definition, comment]\n        Definition:\n            * '=ARG':   has argument\n            * '[=ARG]': has argument but optional\n            * '+':      multiple option supported\n\n            ARG can be replaced by any word.\n\n    Object parse(Array argv)\n        parse argv\n\n        Returns: {argv: '...', options: {...}}\n\n    Object parseSystem()\n        alias of parse(process.argv.slice(2))\n\n\n    Getopt setHelp(String helpTemplate)\n        Set help template. the placeholders will be replaced by getopt.\n\n        Placeholders:\n            * [[OPTIONS]] - The options list\n\n        Returns: String\n\n    String getHelp()\n        Get the help generated.\n\n    Getopt showHelp()\n        console.info(getopt.getHelp());\n\n    Getopt bindHelp([String HELP])\n        set help template to HELP if HELP is not empty.\n        bind 'help' option to default action, show help and exit with 0.\n\n    Getpot on(String optionName, Function<Array argv, Object options> action)\n        after parsing, trigger the action if optionName is found.\n        the 'this' in action will be the instance of Getopt.\n\n    Getopt error(Function<Error e> callback)\n        when parse failed callback will be trigger. default is display error message and exit with 1.\n\nGetopt Static Methods:\n\n    create(Array options)\n        equals new Getopt(options)\n\nOthers:\n\n    default help template:\n\n        \"Usage: node #{process.argv[1].match(/(?:.*[\\/\\\\])?(.*)$/)[1]}\\n\\n[[OPTIONS]]\\n\"\n\nRemarks\n-------\n\n    v0.2.* is NOT compatible with v0.1.*\n",
  "readmeFilename": "README.md",
  "_id": "node-getopt@0.2.3",
  "dist": {
    "shasum": "9a187de69a5476dc6299de85efa4b1f5126ca8af"
  },
  "_from": "node-getopt@0.2.x",
  "_resolved": "https://registry.npmjs.org/node-getopt/-/node-getopt-0.2.3.tgz"
}
